---
- hosts: local
  user: ansible
  become: yes
  become_method: sudo
  tasks: 
  - name: verify application processes are not running
    shell: if ps -eaf | egrep 'apache|http'|grep -v grep > /dev/null;then echo 'process_running';else echo 'process_not_running';fi
    ignore_errors: true
    register: app_process_check
  - name: decission point to start
    fail: msg="{{ inventory_hostname }} is runnning ,please stop application process"
    when: app_process_check.stdout == 'process_running'
  - name: upgrade all packages on server
    yum:
     name: "kernel"
     state: latest
     when: app_process_check.stdout == "process_not_running" and ansible_distribution == 'CentOs' or ansible_distribution == 'Red Hat Enterprise Linux'
     register: yum_update
  - name: check if reboot required after kernel update
    shell: KERNEL_NEW=$();KERNEL_NOW=$();if[$KERNEL_NEW != KERNEL_NOW];then echo 'reboot_needed';else echo 'reboot_not_needed';fi
    ignore_errors: true
    register: reboot_required
  - name: restart system
    command: shutdown -r +1 'rebooting system after paching'
    async: 0
    poll: 0
    when: reboot_required.stdout == "reboot_needed"
    register: reboot_started
    ignore_errors: true
  - name: pause for 180 seconds
    pause:
     minutes: 3
  - name: check if system responding to ssh
    local_action:
     module: wait_for
      host={{ inventory_hostname }}
      port=22
      delay=15
      timeout=380
      state=started
    when: reboot_started|changed

